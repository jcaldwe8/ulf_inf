1. Update inference pipeline according to needs of tests
  2a. The consequent of if-then statements are not necessarily counterfactuals, sometimes they only make sense given the antecedent.
  2b. Future less likely instances have "probably will not" inferences
  2c. (past will.aux-s) --[normalizes to]--> (past do.aux-s).  
    "Having worked too hard, John would not go to the party" -> "John did not go to the party".

  Figure out what to do about "am to" in counterfactuals.
    "If I were/was to go home" ==? "If I went home" ; in this case we would want to preprocess out the "was to"
  This seems right because "am to" *can* be stative is the embedded VP is stative:
    "If I were to be a dog" -> "I am not a dog"
    "If I were to go home" -> "I probably won't go home"


2. Extend tests with undergrad tests (ask them to add it after showing how to
   do it).
3. Add tests from sampling/discussion.
4. Add full testset from pilot experiments into unit tests.
5. Add unit tests for non-cf-version! and negate-vp! since they're fairly complicated functions.





Notes from pilot/select-sampled-ulf.lisp errors:
  - polarity issues: anyone will not -> nobody will (pilot-select-sampled-1);  
    delete 'even.adv-s' in positive polarity (pilot-select-sampled-6
  - (past will.aux-s) -> (past do.aux-s)
  - apply sub before inferences
  - delete duplicates
  - NEED TO IMPLEMENT ASSERT SET EQUALS
  - do not infer requests from sentences with kinds, generics, a.d
    related: make some distinction between can.aux-v and could.aux-v (the latter is more request like)
  - make the stative functionality more robust (e.g. know)
  - not.adv-s (no.d *.n) -> (k *.n) (pilot-select-sampled-6)

  - tense chaining (embedded cfs should not always be inferred from : pilot-select-sampled-3)
