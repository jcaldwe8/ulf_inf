#! /usr/staff/bin/alisp -#!
;; AUTHOR: Adam Purtee  <apurtee@cs.rochester.edu>
;; Works for Allegro Lisp, other Lisps may need a different first #! sequence

(when (not (= (length (sys:command-line-arguments)) 3))
  (format t "USAGE:  ./ttt-apply-ruleset.cl  (-f ruleset | \"RULE\") treebank~%~%")
  (format t "see ruleset-format or example-ruleset for example of rulesets~%")
  (format t "treebank should contain one tree per line. ~%")
  (format t "  (i.e., charniak-parser output)")
  (exit))

(load "tttpkg.fasl")
(in-package :ttt)
(load "operators.fasl")
(load "expressions.fasl")
(load "keys.fasl")
(load "bindings.fasl")
(load "trees.fasl")
(load "patterns.fasl")
(load "unrestricted-seq.fasl")
(load "restricted-seq.fasl")
(load "fpseq-gen.fasl")
(load "descendant.fasl")
(load "vertical.fasl")
(load "literal.fasl")
(load "sticky.fasl")
(load "predicates.fasl")
(load "template-construction.fasl")
(load "transductions.fasl")
(load "tests.fasl")
(load "util.fasl")
(load "process-tb.lisp")



					
(let* ((ruleset (if (string-equal (nth 1 (sys:command-line-arguments)) "-f")
		    (with-open-file (fh (nth 2 (sys:command-line-arguments) ))
		      (eval (eval (read fh))))
		    (list (read-from-string (nth 1 (sys:command-line-arguments))))))
       (treebank-filename (if (string-equal (nth 1 (sys:command-line-arguments)) "-f")
			      (nth 3 (sys:command-line-arguments))
			      (nth 2 (sys:command-line-arguments)))))
  (process-tb ruleset treebank-filename))


		  
	   
	     


