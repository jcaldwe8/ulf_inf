(in-package :ttt)
(defun search-tb (treebank-file patt-expr)
  ;;(format t "pattern: ~a~%" patt-expr)
;;  (format t "treebank: ~a~%" treebank-file)
  (let ((*print-pretty* nil)
	(patt (build-pattern patt-expr))
	(n-searched 0)
	(n-matched 0))
    (with-open-file (treebank-fh treebank-file)
      (loop for tree = (read-line treebank-fh nil)  
	 while tree do
	   (incf n-searched)
	   (let ((binds (deep-match patt (build-tree (lispify-parser-output tree) :index-subtrees t))))
	     (when binds	
	       (incf n-matched)
	       (format t "~a~%" tree)
	       ;;(maphash (lambda (k v) (format t "~a: ~a~%" k (mapcar #'to-expr (car v))))
	       ;;binds)
	       ;;(format t "~%")
	       ))))
    ;(format t "~a trees searched.~%" n-searched)
    ;(format t "~a trees matched.~%" n-matched)
    ))
